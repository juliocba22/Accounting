@*@model accounting.ViewModels.FacturaProveedoresVMIndex*@
@*@using accounting.Helpers*@

@{
    ViewBag.Title = "Reporte de Cuentas a Pagar";
}

    <h2>Reporte de Cuentas a Pagar</h2>

@*@using (Html.BeginForm("CuentasAPagar", "Reportes", FormMethod.Post, new { page = 1 }))
{*@
    <p>La duda que tengo aca es saber cual sería la fecha de vencimiento. Tanto en GASTOS como en FACTURAS PROFESIONALES tenemos fecha gasto/factura y fecha de pago. Cual de las dos deberiamos tomar? Otra cosa es  que estaria bueno definir que columnas mostrar, si lleva totales, etc. Algun ejemplo serviría mucho.</p>
    @*<div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.Label("Fecha desde")
                        @Html.TextBoxFor(model => model.FechaEmisionDesde, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                    </div>
                </div>
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.Label("Fecha hasta")
                        @Html.TextBoxFor(model => model.FechaEmisionHasta, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                        <br>
                        <span class="input-group-btn">
                            <button class="btn btn-success" type="submit">Buscar</button>
                        </span>
                    </div>
                </div>
            </div>
            @if (Model.list != null && Model.list.ToList().Count > 0)
            {
                <div class="row">
                    <div class="col-xs-6" style="margin-top:10px;">
                        <span class="glyphicon glyphicon-download"></span>
                        @Html.ActionLink("Exportar listado a CSV", "CuentasAPagarCSV", new {fechaD = Model.FechaEmisionDesde, fechaH = Model.FechaEmisionHasta })
                    </div>
                </div>
            }
        </div>
    </div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.ActionLink("DESCARGAR EN PDF", "CuentasAPagarPDF", null, htmlAttributes: new { @class = "btn btn-primary" })
</div>
<table class="table">
    <tr>
        <th>
            @Html.Label("Nro Factura")
        </th>
        <th>
            @Html.Label("Fecha Factura")
        </th>
        <th>
            @Html.Label("Profesional")
        </th>
        <th>
            @Html.Label("Cargada Por")
        </th>
        <th>
            @Html.Label("Archivo")
        </th>
        <th>
            @Html.Label("Estado")
    </tr>

    @if (@Model.list.Count() == 0)
    {
        <tr>
            <td colspan="10">No se encontraron registros.</td>
        </tr>
    }
    else
    {
        foreach (var item in Model.list)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaFactura)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Proveedor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User)
                </td>
                <td>
                   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstadoDesc)
                </td>
            </tr>
        }
    }

</table>

@if (Model.list.ToList().Count > 0)
{
    if (Model.pagingInfo.TotalPages > 1)
    {
        <ul class="paginate pag1 clearfix">
            <li class="single">Pág. @Model.pagingInfo.CurrentPage de @Model.pagingInfo.TotalPages</li>
            @Html.PageLinks(Model.pagingInfo, x => Url.Action("Index", "FacturaProveedor", new { page = x, estado = Model.estado, fechaD = Model.FechaEmisionDesde, fechaH = Model.FechaEmisionHasta }))
        </ul>
    }
}*@