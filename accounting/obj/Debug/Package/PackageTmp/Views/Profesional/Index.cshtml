@model accounting.ViewModels.ProfesionalVMIndex
@using accounting.Helpers

@{
    ViewBag.Title = "Listado de Profesionales";
}

    <h2>Listado de Profesionales</h2>

@using (Html.BeginForm("Index", "Profesional", FormMethod.Post, new { page = 1 }))
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.nombre, new { @class = "form-control", @placeholder = "Ingrese Nombre y Apellido", @style = "max-width:100%;" })
                        <span class="input-group-btn">
                            <button class="btn btn-success" type="submit">Buscar</button>
                        </span>
                    </div>
                </div>
            </div>
            @if (Model.list != null && Model.list.ToList().Count > 0)
            {
                <div class="row">
                    <div class="col-xs-6" style="margin-top:10px;">
                        <span class="glyphicon glyphicon-download"></span>
                        @Html.ActionLink("Exportar listado a CSV", "Export", new { nombre = Model.nombre })
                    </div>
                </div>
            }
        </div>
    </div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.ActionLink("NUEVO PROFESIONAL", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })
</div>
<table class="table">
    <tr>
        <th>
            @Html.Label("Nombre y Apellido")
        </th>
        <th>
            @Html.Label("Servicio")
        </th>
        <th>
            @Html.Label("Teléfono")
        </th>
        <th>
            @Html.Label("Email")
        </th>
        <th>Acciones</th>
    </tr>

    @if (@Model.list.Count() == 0)
    {
        <tr>
            <td colspan="10">No se encontraron registros.</td>
        </tr>
    }
    else
    {
        foreach (var item in Model.list)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.servicio)
                </td> 
                <td>
                    @Html.DisplayFor(modelItem => item.telefono)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    <a href="@Url.Action("Edit", new { id = item.id })" title="Editar"><span class="glyphicon glyphicon-edit"></span></a>
                    | <a href="@Url.Action("Details", new { id = item.id })" title="Detalle"><span class="glyphicon glyphicon-list-alt"></span></a>
                    | <a href="@Url.Action("Delete", new { id = item.id })" title="Eliminar"><span class="glyphicon glyphicon-remove-circle"></span></a>
                </td>
            </tr>
        }
    }

</table>

@if (Model.list.ToList().Count > 0)
{
    if (Model.pagingInfo.TotalPages > 1)
    {
        <ul class="paginate pag1 clearfix">
            <li class="single">Pág. @Model.pagingInfo.CurrentPage de @Model.pagingInfo.TotalPages</li>
            @Html.PageLinks(Model.pagingInfo, x => Url.Action("Index", "Profesional", new { page = x, nombre = Model.nombre }))
        </ul>
    }
}
