@model accounting.ViewModels.FacturaProveedoresVM

@{
    ViewBag.Title = "Nueva Factura";
}

<h2>Nuevo Factura</h2>

@using (Html.BeginForm("Create", "FacturaProveedores", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.periodo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.periodo, new SelectList(ViewBag.Per, "key", "value"), "Seleccione Período", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.fecha_pago, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fecha_pago, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "Date" })
            @Html.ValidationMessageFor(model => model.fecha_pago, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tipo_factura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.tipo_factura, new SelectList(ViewBag.TipoFac, "key", "value"), "Seleccione Tipo Factura", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tipo_factura, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.fecha_factura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fecha_factura, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "Date" })
            @Html.ValidationMessageFor(model => model.fecha_factura, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tipo_comprobante_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.tipo_comprobante_id, new SelectList(ViewBag.TipoComp, "id", "descripcion"), "Seleccione Tipo Comprobante", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tipo_comprobante_id, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.profesional_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.profesional_id, new SelectList(ViewBag.Prof, "id", "nombre"), "Seleccione Profesional..", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.profesional_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.punto_venta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.punto_venta, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nro_comprobante, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nro_comprobante, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nro_comprobante, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cuit_cuil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cuit_cuil, new SelectList(ViewBag.CC, "id", "desc"), "Seleccione..", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cuit_cuil, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nro_cuit_cuil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nro_cuit_cuil, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nro_cuit_cuil, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.imp_neto_gravado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imp_neto_gravado, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.imp_neto_no_gravado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imp_neto_no_gravado, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.imp_op_exentas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imp_op_exentas, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.iva, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.iva, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.importe_total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.importe_total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.importe_total, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.file, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.file, new { type = "file" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.estado, new SelectList(ViewBag.Est, "key", "value"), "Seleccione Estado", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar al Listado", "Index")
</div>

