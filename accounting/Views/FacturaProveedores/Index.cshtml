@model accounting.ViewModels.FacturaProveedoresVMIndex
    @using accounting.Helpers

    @{
        ViewBag.Title = "Listado de Facturas";
    }

    <h2>Listado de Facturas</h2>

    @using (Html.BeginForm("Index", "FacturaProveedores", FormMethod.Post, new { page = 1 }))
    {
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-3">
                        <div class="input-group">
                            @Html.Label("Fecha desde")
                            @Html.TextBoxFor(model => model.FechaEmisionDesde, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                        </div>
                    </div>
                    <div class="col-xs-3">
                        <div class="input-group">
                            @Html.Label("Fecha hasta")
                            @Html.TextBoxFor(model => model.FechaEmisionHasta, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                        </div>
                    </div>
                    <div class="col-xs-3">
                        <div class="input-group">
                            @Html.Label("Estado")
                            @Html.DropDownListFor(model => model.estado, new SelectList(ViewBag.Est, "key", "value"), "Todos", htmlAttributes: new { @class = "form-control" })
                            <br>
                            <span class="input-group-btn">
                                <button class="btn btn-success" type="submit">Buscar</button>
                            </span>
                        </div>
                    </div>
                </div>
                @if (Model.list != null && Model.list.ToList().Count > 0)
                {
                    <div class="row">
                        <div class="col-xs-6" style="margin-top:10px;">
                            <span class="glyphicon glyphicon-download"></span>
                            @Html.ActionLink("Exportar listado a CSV", "Export", new { estado = Model.estado, fechaD = Model.FechaEmisionDesde, fechaH = Model.FechaEmisionHasta })
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.ActionLink("NUEVA FACTURA", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })
    </div>
    <table class="table">
        <tr>
            <th>
                @Html.Label("Nro Factura")
            </th>
            <th>
                @Html.Label("Fecha Factura")
            </th>
            <th>
                @Html.Label("Profesional")
            </th>
            <th>
                @Html.Label("Cargada Por")
            </th>
            <th>
                @Html.Label("Archivo")
            </th>
            <th>
                @Html.Label("Estado")
            </th>
            <th>Acciones</th>
        </tr>

        @if (@Model.list.Count() == 0)
        {
            <tr>
                <td colspan="10">No se encontraron registros.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model.list)
            {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FechaFactura)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Proveedor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.User)
        </td>
        <td>
            @if (!string.IsNullOrEmpty(item.FileName))
            {
                <a target="_blank" href="http://w260077.ferozo.com/path/@item.FileName">DOWNLOAD</a>

            }
            else
            {
                <img src="~/img/file_notaviable.png" alt="sin archivo" width="30" height="30" />
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EstadoDesc)
        </td>
        <td>
            @if (item.EstadoDesc == "PAGADO")
            {
                <a href="@Url.Action("Details", new { id=item.id })" title="Detalle"><span class="glyphicon glyphicon-list-alt"></span></a>
            }
            else
            {
                <a href="@Url.Action("Edit", new { id=item.id })" title="Editar"><span class="glyphicon glyphicon-edit"></span></a> 
                <a href = "@Url.Action("Details", new { id=item.id })" title = "Detalle" ><span class="glyphicon glyphicon-list-alt"></span></a> 
                <a href = "@Url.Action("Delete", new { id=item.id })" title="Eliminar"><span class="glyphicon glyphicon-remove-circle"></span></a>
            }
        </td>
    </tr>
            }
        }

    </table>

    @if (Model.list.ToList().Count > 0)
    {
        if (Model.pagingInfo.TotalPages > 1)
        {
            <ul class="paginate pag1 clearfix">
                <li class="single">Pág. @Model.pagingInfo.CurrentPage de @Model.pagingInfo.TotalPages</li>
                @Html.PageLinks(Model.pagingInfo, x => Url.Action("Index", "FacturaProveedor", new { page = x, estado = Model.estado, fechaD = Model.FechaEmisionDesde, fechaH = Model.FechaEmisionHasta }))
            </ul>
        }
    }