@model accounting.ViewModels.CompraVMIndex
@using accounting.Helpers

@{
    ViewBag.Title = "Listado de Compras";
}

<h2>Listado de Compras</h2>


<p>
    @Html.ActionLink("Nueva Compra", "Create")
</p>

@using (Html.BeginForm("Index", "Compra", FormMethod.Post, new { page = 1 }))
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.Label("Fecha desde")
                        @Html.TextBoxFor(model => model.FechaEmisionDesde, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                    </div>
                </div>
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.Label("Fecha hasta")
                        @Html.TextBoxFor(model => model.FechaEmisionHasta, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                    </div>
                </div>
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.Label("Proveedores")
                        @Html.DropDownListFor(model => model.proveedor, new SelectList(ViewBag.Provedores, "id", "razon_social"), "Todos", htmlAttributes: new { @class = "form-control" })
                        <br>
                        <span class="input-group-btn">                         
                            <button class="btn btn-success" type="submit">Buscar</button>
                        </span>
                    </div>
                </div>
            </div>
            @if (Model.list != null && Model.list.ToList().Count > 0)
            {
                <div class="row">
                    <div class="col-xs-6" style="margin-top:10px;">
                        <span class="glyphicon glyphicon-download"></span>
                        @Html.ActionLink("Exportar listado a CSV", "Export", new { proveedor = Model.proveedor, fechaD= Model.FechaEmisionDesde, fechaH = Model.FechaEmisionHasta })
                    </div>
                </div>
            }
        </div>
    </div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<table class="table">
    <tr>
        <th>
            @Html.Label("Proveedor")
        </th>
        <th>
            @Html.Label("Comprobante")
        </th>
        <th>
            @Html.Label("Nro Factura")
        </th>
        <th>
            @Html.Label("Fecha Emisión")
        </th>
        <th>
            @Html.Label("Importe")
        </th>
        <th>Acciones</th>
    </tr>

    @if (@Model.list.Count() == 0)
    {
        <tr>
            <td colspan="10">No se encontraron registros.</td>
        </tr>
    }
    else
    {
        foreach (var item in Model.list)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Proveedor)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TipoComprobante)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.NroFactura)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.FechaEmision)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Importe)
    </td>
    <td>
        @Html.ActionLink("Editar", "Edit", new { id = item.id }) |
        @Html.ActionLink("Detalle", "Details", new { id = item.id }) |
        @Html.ActionLink("Eliminar", "Delete", new { id = item.id })
    </td>
</tr>
        }
    }

</table>

@if (Model.list.ToList().Count > 0)
{
    if (Model.pagingInfo.TotalPages > 1)
    {
        <ul class="paginate pag1 clearfix">
            <li class="single">Pág. @Model.pagingInfo.CurrentPage de @Model.pagingInfo.TotalPages</li>
            @Html.PageLinks(Model.pagingInfo, x => Url.Action("Index", "Compra", new { page = x, proveedor = Model.proveedor, fechaD = Model.FechaEmisionDesde, fechaH = Model.FechaEmisionHasta }))
        </ul>
    }
}
