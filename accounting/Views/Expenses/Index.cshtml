@model accounting.ViewModels.ExpenseIndexVM
@using accounting.Helpers

@{
    ViewBag.Title = "Listado de gastos";
}

<h2>Listado de Gastos</h2>

@using (Html.BeginForm("Index", "Expenses", FormMethod.Post, new { page = 1 }))
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-3">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.expense_type, new { @class = "form-control", @placeholder = "tipo de gasto", @style = "max-width:100%;" })
                        <span class="input-group-btn">
                            <button class="btn btn-success" type="submit">Buscar</button>
                        </span>
                    </div>
                </div>
            </div>
            @if (Model.list != null && Model.list.ToList().Count > 0)
            {
                <div class="row">
                    <div class="col-xs-6" style="margin-top:10px;">
                        <span class="glyphicon glyphicon-download"></span>
                        @Html.ActionLink("Exportar listado a CSV", "Export", new { expense_type = Model.expense_type})
                    </div>
                </div>
            }
        </div>
    </div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.ActionLink("NUEVO GASTO", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })
</div>

    <table class="table">
        <tr>
            <th>
                @Html.Label("Nombre del Voluntario")
            </th>
            <th>
                @Html.Label("Tipo gasto")
            </th>
            <th>
                @Html.Label("Fecha gasto")
            </th>
            <th>
                @Html.Label("Cargado por")
            </th>
            <th>
                @Html.Label("Archivo")
            </th>
            <th>Acciones</th>
        </tr>

        @if (@Model.list.Count() == 0)
        {
            <tr>
                <td colspan="10">no se encontraron registros.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model.list)
            {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.description)
        </td>

        <td>
            @item.date_expense.ToString("dd/MM/yyyy")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.user)
        </td>
        <td>
            @if (!string.IsNullOrEmpty(item.name_file))
            {
                @*<a target="_blank" href="http://institutosanignacio.com.ar/Fundacion/path/@item.name_file">DOWNLOAD</a>*@
                <a target="_blank" href="http://w260077.ferozo.com/path/@item.name_file">DOWNLOAD</a>

            }
            else
            {
                <img src="~/img/file_notaviable.png" alt="sin archivo" width="30" height="30" />
            }

        </td>
        <td>
            <a href="@Url.Action("Edit", new { id = item.id })" title="Editar"><span class="glyphicon glyphicon-edit"></span></a>
            | <a href="@Url.Action("Details", new { id = item.id })" title="Detalle"><span class="glyphicon glyphicon-list-alt"></span></a>
            | <a href="@Url.Action("Delete", new { id = item.id })" title="Eliminar"><span class="glyphicon glyphicon-remove-circle"></span></a>
            | <a href="@Url.Action("ExportPDF", new { id = item.id })" title="Descargar en PDF"><span class="glyphicon glyphicon-file"></span></a>
        </td>
    </tr>
            }
        }

    </table>

    @if (Model.list.ToList().Count > 0)
    {
        if (Model.pagingInfo.TotalPages > 1)
        {
            <ul class="paginate pag1 clearfix">
                <li class="single">Pág. @Model.pagingInfo.CurrentPage de @Model.pagingInfo.TotalPages</li>
                @Html.PageLinks(Model.pagingInfo, x => Url.Action("Index", "Expenses", new { page = x, name = Model.name }))
            </ul>
        }
    }

